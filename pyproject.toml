# pyproject.toml

[project]
name = "my-ai-assistant"
version = "1.2.4"
description = "A Persona-Driven AI Assistant for Development and Knowledge Work"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
      "aiohttp==3.12.",
      "pyyaml",
      "pydantic==2.11.5",
      "structlog",
      "instructor",
      "openai",    
      "google-generativeai", 
      "chromadb==1.0.20",
      "tiktoken==0.11.0 ",
      "python-dotenv==1.1.1",
      "sentence-transformers",
      "torch",
      ]

[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project.scripts]
ai = "ai_assistant.cli:main"
ai-execute = "ai_assistant.executor:main"

[project.entry-points."ai_assistant.context_plugins"]
"domains-programming" = "ai_assistant.plugins.domains.programming.context:ProgrammingContextPlugin"
"domains-finance" = "ai_assistant.plugins.domains.finance.context:FinanceContextPlugin"
"domains-writing" = "ai_assistant.plugins.domains.writing.context:WritingContextPlugin"
"domains-trading" = "ai_assistant.plugins.domains.trading.context:TradingContextPlugin"

[project.optional-dependencies]
test = [
    "unittest-xml-reporting",
    "pytest",
    "jsonschema",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["ai_assistant*"]

[tool.setuptools.package-data]
"ai_assistant" = [
    "default_config.yml",
    "personas/**/*.persona.md",
    "internal_data/governance.yml",
    "internal_data/persona_config.yml",
    "internal_data/schemas/**/*.json"
]